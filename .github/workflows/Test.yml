name: Tests

on:
  push:
    branches: [main]
    tags: ["*"]
  pull_request:
  workflow_dispatch:

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - "1"
          - "nightly"
        os: 
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch: 
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - name: Cache artifacts
        uses: actions/cache@v2
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
      - name: Cache model atmosphere archive
        id: cache-atmospheres
        uses: actions/cache@v3 
        with:
          path: ~/.korg/SDSS_MARCS_atmospheres.h5
          key: ${{ runner.os }}-korg-model-atmosphere
      - name: Download model atmosphere archive (if not cached)
        if: steps.cache-atmospheres.outputs.cache-hit != 'true'
        run: julia -e 'using Korg; download_atmosphere_archive()'
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-runtest@latest
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-docdeploy@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
